name: 'DBS Scraper | Web deploy'
on:
    push:
      tags:
        - cards**'

jobs:
  deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    env:
      LATEST_RELEASE_CARDS_FILE: ./web-page/src/cards.json

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download cards.json from latest release
        uses: Xotl/cool-github-releases@v1
        with:
          assets: cards.json|${{env.LATEST_RELEASE_CARDS_FILE}}
          github_token: ${{ github.token }} 

      - name: Build Docker image
        run: |
          docker build --no-cache -t dbs-web ./web-page
      
      - name: Build app files
        run: |
          mkdir build
          docker run --rm -v ${PWD}/build:/home/node/app/build dbs-web npm run build
          find ${PWD}/build -type f -exec chmod 777 {} \;

      - name: Push to gh-pages branch
        env:
          REMOTE_REPO: https://${{ secrets.GITHUB_OAUTH_TOKEN }}@github.com/${{ github.repository }}.git
        run: |
          find ./ -regextype 'posix-extended' -mindepth 1 ! -regex '^\.\/(build|\.git)(\/.*)?' -delete
          cp -a ${PWD}/build/. ./
          rm -rf ${PWD}/build
          ls -a
        # run: |
        #   NEW_TAG="web_$(date --utc '+%Y-%m-%d/%Hh-%Mm')"
        #   find ./build -regextype 'posix-extended' -mindepth 1 ! -regex '^\.\/(build|\.git)(\/.*)?' -delete
        #   git add -A
        #   git commit -m "New version"
        #   git tag -a "${{env.NEW_TAG}}" -m "${{env.NEW_TAG}} | Auto pushed from Github Actions"
        #   git push -f --follow-tags ${REMOTE_REPO} HEAD:gh-pages
